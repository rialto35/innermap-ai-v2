import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';

// 화면 캡처 후 PDF 생성 (한글 지원)
export async function generatePDF() {
  try {
    // 분석 결과 화면 요소 찾기
    const element = document.querySelector('.max-w-4xl'); // AnalysisResult 메인 컨테이너
    
    if (!element) {
      throw new Error('PDF 생성할 화면을 찾을 수 없습니다.');
    }

    // 화면을 이미지로 캡처
    const canvas = await html2canvas(element, {
      scale: 2, // 고해상도
      useCORS: true,
      allowTaint: true,
      backgroundColor: '#ffffff',
      width: element.scrollWidth,
      height: element.scrollHeight,
      scrollX: 0,
      scrollY: 0
    });

    // PDF 생성
    const pdf = new jsPDF('p', 'mm', 'a4');
    const pageWidth = pdf.internal.pageSize.getWidth();
    const pageHeight = pdf.internal.pageSize.getHeight();
    
    // 캔버스 크기 계산
    const canvasWidth = canvas.width;
    const canvasHeight = canvas.height;
    
    // PDF 페이지에 맞게 크기 조정
    const ratio = Math.min(pageWidth / (canvasWidth * 0.264583), pageHeight / (canvasHeight * 0.264583));
    const imgWidth = canvasWidth * 0.264583 * ratio;
    const imgHeight = canvasHeight * 0.264583 * ratio;
    
    // 중앙 정렬
    const x = (pageWidth - imgWidth) / 2;
    const y = 10; // 상단 여백

    // 이미지를 PDF에 추가
    const imgData = canvas.toDataURL('image/png');
    
    // 페이지가 길면 여러 페이지로 분할
    if (imgHeight > pageHeight - 20) {
      // 페이지를 나누어서 처리
      const pageRatio = (pageHeight - 20) / imgHeight;
      const adjustedHeight = pageHeight - 20;
      const adjustedWidth = imgWidth * pageRatio;
      
      pdf.addImage(imgData, 'PNG', x, y, adjustedWidth, adjustedHeight);
      
      // 추가 페이지가 필요한 경우 (현재는 1페이지만)
    } else {
      pdf.addImage(imgData, 'PNG', x, y, imgWidth, imgHeight);
    }

    // 파일명 생성
    const timestamp = new Date().toISOString().slice(0, 19).replace(/:/g, '-');
    const fileName = `InnerMap_AI_분석결과_${timestamp}.pdf`;
    
    // PDF 다운로드
    pdf.save(fileName);
    
    return {
      success: true,
      fileName: fileName
    };
    
  } catch (error) {
    console.error('PDF 생성 에러:', error);
    return {
      success: false,
      error: error.message
    };
  }
}

// 브라우저 프린트 기능 활용 (더 간단한 방법)
export function generatePrintPDF() {
  try {
    // 브라우저 프린트 대화상자 열기
    window.print();
    return { success: true };
  } catch (error) {
    console.error('프린트 에러:', error);
    return { success: false, error: error.message };
  }
}

// 한글 텍스트 파일 다운로드 (fallback)
export function generateTextFile(analysisData, testResults) {
  try {
    const content = `
🧠 InnerMap AI 성격 분석 결과

📊 테스트 결과 요약
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
MBTI: ${testResults?.mbti || 'N/A'}
에니어그램: 유형 ${testResults?.enneagram || 'N/A'}
선택 컬러: ${testResults?.colors?.map(c => c.name).join(', ') || '선택된 컬러 없음'}

🎯 성격 요약
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
${analysisData?.combined?.summary || '분석이 완료되었습니다.'}

✨ 당신의 강점
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
${(analysisData?.combined?.strengths || []).map((s, i) => `${i + 1}. ${s}`).join('\n')}

🚀 성장 포인트
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
${(analysisData?.combined?.growth_areas || []).map((s, i) => `${i + 1}. ${s}`).join('\n')}

💡 일상 실천법
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
${(analysisData?.combined?.daily_practices || []).map((s, i) => `${i + 1}. ${s}`).join('\n')}

🎯 마지막 한 마디
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
"${analysisData?.combined?.final_advice || '당신만의 독특함을 발휘하세요!'}"

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Generated by InnerMap AI
분석 완료: ${new Date().toLocaleString('ko-KR')}
    `;
    
    // UTF-8 BOM 추가하여 한글 깨짐 방지
    const BOM = '\uFEFF';
    const blob = new Blob([BOM + content], { type: 'text/plain;charset=utf-8' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `InnerMap_AI_분석결과_${new Date().toISOString().slice(0, 10)}.txt`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
    
    return { 
      success: true, 
      fileName: link.download,
      type: 'text'
    };
  } catch (error) {
    console.error('텍스트 파일 생성 에러:', error);
    return { success: false, error: error.message };
  }
}

// PDF 지원 여부 확인
export function isPDFSupported() {
  return typeof window !== 'undefined' && 
         typeof document !== 'undefined';
}