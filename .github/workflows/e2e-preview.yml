name: E2E Preview Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

      - name: Run contract tests
        run: npx vitest run tests/unit/contracts.spec.ts

      - name: Run golden tests
        run: npm run test:golden:verify

      - name: Run benchmark tests
        run: npx tsx scripts/benchmark-accuracy.ts

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          NEXT_PUBLIC_E2E: 1

      - name: Run deterministic scenarios
        run: npx playwright test tests/e2e/deterministic-scenarios.spec.ts
        env:
          NEXT_PUBLIC_E2E: 1

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      - name: Upload traces
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-traces
          path: test-results/
          retention-days: 7

      - name: Comment PR with results
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let comment = '## 🚨 E2E 테스트 실패\n\n';
            comment += '다음 테스트가 실패했습니다:\n';
            comment += '- 유닛 테스트\n';
            comment += '- 계약 테스트\n';
            comment += '- 골든 데이터 테스트\n';
            comment += '- 벤치마크 테스트\n';
            comment += '- E2E 테스트\n';
            comment += '- 결정적 시나리오 테스트\n\n';
            comment += '자세한 결과는 아티팩트를 확인하세요.';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
