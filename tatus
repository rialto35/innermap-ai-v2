diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=schannel
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
user.name=rialto35
user.email=rialto35@naver.com
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true
remote.origin.url=https://github.com/rialto35/innermap-ai.git
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
branch.main.remote=origin
branch.main.merge=refs/heads/main
branch.main.vscode-merge-base=origin/main
branch.main.vscode-merge-base=origin/main
[1mdiff --git a/next.config.ts b/next.config.ts[m
[1mindex e8a5be5..53519ea 100644[m
[1m--- a/next.config.ts[m
[1m+++ b/next.config.ts[m
[36m@@ -33,6 +33,12 @@[m [mconst nextConfig: NextConfig = {[m
       { source: '/_next/image', destination: '/heroes/default.svg' },[m
     ];[m
   },[m
[32m+[m[32m  async redirects() {[m
[32m+[m[32m    return [[m
[32m+[m[32m      { source: '/report/:id', destination: '/result/:id', permanent: true },[m
[32m+[m[32m      { source: '/reports/:id', destination: '/result/:id', permanent: true },[m
[32m+[m[32m    ];[m
[32m+[m[32m  },[m
   async headers() {[m
     return [[m
       {[m
[1mdiff --git a/src/app/api/reports/[id]/route.ts b/src/app/api/reports/[id]/route.ts[m
[1mindex 7bef5fc..4e1d0aa 100644[m
[1m--- a/src/app/api/reports/[id]/route.ts[m
[1m+++ b/src/app/api/reports/[id]/route.ts[m
[36m@@ -60,8 +60,57 @@[m [mexport async function GET([m
         .single();[m
 [m
       if (resultError || !resultRow) {[m
[31m-        console.log('‚ùå [API /reports/:id] Not found in results fallback either:', { resultError });[m
[31m-        return NextResponse.json({ error: 'Report not found' }, { status: 404 });[m
[32m+[m[32m        console.log('‚ö†Ô∏è [API /reports/:id] Results table fallback failed. Trying internal /api/results/:id ...', { resultError });[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m          const apiUrl = new URL(`/api/results/${id}`, request.url).toString();[m
[32m+[m[32m          const r = await fetch(apiUrl, { cache: 'no-store', headers: { 'x-im-internal': '1' } });[m
[32m+[m[32m          if (!r.ok) {[m
[32m+[m[32m            console.log('‚ùå [API /reports/:id] Internal /api/results/:id fallback failed:', { status: r.status });[m
[32m+[m[32m            return NextResponse.json({ error: 'Report not found' }, { status: 404 });[m
[32m+[m[32m          }[m
[32m+[m[32m          const data = await r.json();[m
[32m+[m
[32m+[m[32m          const coerceNum = (v: any, d = 0) => (typeof v === 'number' ? v : Number(v ?? d));[m
[32m+[m[32m          const coerceBig5 = (b: any) => ({[m
[32m+[m[32m            o: coerceNum(b?.O ?? b?.o),[m
[32m+[m[32m            c: coerceNum(b?.C ?? b?.c),[m
[32m+[m[32m            e: coerceNum(b?.E ?? b?.e),[m
[32m+[m[32m            a: coerceNum(b?.A ?? b?.a),[m
[32m+[m[32m            n: coerceNum(b?.N ?? b?.n),[m
[32m+[m[32m          });[m
[32m+[m[32m          const inner9Arr = (() => {[m
[32m+[m[32m            const rec = (data as any)?.inner9_scores as Record<string, number> | null;[m
[32m+[m[32m            if (!rec) return [] as Array<{ label: string; value: number }>;[m
[32m+[m[32m            return Object.entries(rec).map(([k, v]) => ({ label: k, value: coerceNum(v) }));[m
[32m+[m[32m          })();[m
[32m+[m
[32m+[m[32m          const fallbackFromApi: ReportV1 = {[m
[32m+[m[32m            id,[m
[32m+[m[32m            ownerId: (data as any)?.user_id ?? session.user.email,[m
[32m+[m[32m            meta: {[m
[32m+[m[32m              version: 'v1.3.1',[m
[32m+[m[32m              engineVersion: (data as any)?.engine_version || 'IM-Core 1.3.1',[m
[32m+[m[32m              weightsVersion: 'v1.3',[m
[32m+[m[32m              generatedAt: (data as any)?.created_at || new Date().toISOString(),[m
[32m+[m[32m            },[m
[32m+[m[32m            scores: {[m
[32m+[m[32m              big5: coerceBig5((data as any)?.big5_scores || {}),[m
[32m+[m[32m              mbti: (data as any)?.mbti?.type || (data as any)?.mbti || 'XXXX',[m
[32m+[m[32m              reti: coerceNum((data as any)?.reti?.primaryType || (data as any)?.reti?.score || (data as any)?.reti, 5),[m
[32m+[m[32m              inner9: inner9Arr,[m
[32m+[m[32m            },[m
[32m+[m[32m            summary: {[m
[32m+[m[32m              highlight: (data as any)?.analysis_text || 'Î∂ÑÏÑù Í≤∞Í≥ºÎ•º ÌôïÏù∏Ìï¥Î≥¥ÏÑ∏Ïöî.',[m
[32m+[m[32m              bullets: ['Î∂ÑÏÑù ÏôÑÎ£å', 'Í≤∞Í≥º ÌôïÏù∏ Í∞ÄÎä•'],[m
[32m+[m[32m            },[m
[32m+[m[32m          };[m
[32m+[m
[32m+[m[32m          return NextResponse.json(fallbackFromApi);[m
[32m+[m[32m        } catch (e) {[m
[32m+[m[32m          console.log('‚ùå [API /reports/:id] Final fallback failed:', e);[m
[32m+[m[32m          return NextResponse.json({ error: 'Report not found' }, { status: 404 });[m
[32m+[m[32m        }[m
       }[m
 [m
       // Í≤∞Í≥º Ïä§ÎÉÖÏÉ∑ÏùÑ ReportV1Î°ú Î≥ÄÌôò (fallback)[m
[1mdiff --git a/src/app/api/result/[id]/route.ts b/src/app/api/result/[id]/route.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..0e8023b[m
[1m--- /dev/null[m
[1m+++ b/src/app/api/result/[id]/route.ts[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mimport { NextRequest, NextResponse } from 'next/server';[m
[32m+[m
[32m+[m[32mexport async function GET(request: NextRequest, { params }: { params: Promise<{ id: string }> }) {[m
[32m+[m[32m  const { id } = await params;[m
[32m+[m[32m  const url = new URL(`/api/reports/${id}?include=deep`, request.url).toString();[m
[32m+[m[32m  const r = await fetch(url, { cache: 'no-store' });[m
[32m+[m[32m  return new NextResponse(r.body, { status: r.status, headers: r.headers });[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[1mdiff --git a/src/app/api/result/route.ts b/src/app/api/result/route.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..2b05efd[m
[1m--- /dev/null[m
[1m+++ b/src/app/api/result/route.ts[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mimport { NextRequest, NextResponse } from 'next/server';[m
[32m+[m
[32m+[m[32mexport async function GET(request: NextRequest) {[m
[32m+[m[32m  const url = new URL('/api/reports', request.url);[m
[32m+[m[32m  const owner = request.nextUrl.searchParams.get('owner');[m
[32m+[m[32m  if (owner) url.searchParams.set('owner', owner);[m
[32m+[m[32m  if (request.nextUrl.searchParams.has('limit')) url.searchParams.set('limit', request.nextUrl.searchParams.get('limit')!);[m
[32m+[m[32m  const r = await fetch(url.toString(), { cache: 'no-store' });[m
[32m+[m[32m  return new NextResponse(r.body, { status: r.status, headers: r.headers });[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[1mdiff --git a/src/app/result/[id]/page.tsx b/src/app/result/[id]/page.tsx[m
[1mnew file mode 100644[m
[1mindex 0000000..0da3cbc[m
[1m--- /dev/null[m
[1m+++ b/src/app/result/[id]/page.tsx[m
[36m@@ -0,0 +1,90 @@[m
[32m+[m[32m'use client';[m
[32m+[m
[32m+[m[32mimport { useSearchParams } from 'next/navigation';[m
[32m+[m[32mimport useSWR from 'swr';[m
[32m+[m[32mimport type { ReportV1 } from '@/types/report';[m
[32m+[m[32mimport ReportSummary from '@/components/report/ReportSummary';[m
[32m+[m[32mimport ReportDeep from '@/components/report/ReportDeep';[m
[32m+[m[32mimport React, { useState } from 'react';[m
[32m+[m
[32m+[m[32mexport default function ResultPage({ params }: { params: Promise<{ id: string }> }) {[m
[32m+[m[32m  const searchParams = useSearchParams();[m
[32m+[m[32m  const tab = searchParams.get('tab') || 'summary';[m
[32m+[m[32m  const [activeTab, setActiveTab] = useState(tab);[m
[32m+[m[32m  const [resultId, setResultId] = useState<string | null>(null);[m
[32m+[m
[32m+[m[32m  React.useEffect(() => {[m
[32m+[m[32m    params.then(({ id }) => setResultId(id));[m
[32m+[m[32m  }, [params]);[m
[32m+[m
[32m+[m[32m  const { data: report, error, isLoading } = useSWR<ReportV1>([m
[32m+[m[32m    resultId ? `/api/reports/${resultId}?include=deep` : null,[m
[32m+[m[32m    async (url: string) => {[m
[32m+[m[32m      const res = await fetch(url, { cache: 'no-store' });[m
[32m+[m[32m      if (!res.ok) throw new Error('Failed to fetch report');[m
[32m+[m[32m      return res.json();[m
[32m+[m[32m    }[m
[32m+[m[32m  );[m
[32m+[m
[32m+[m[32m  if (isLoading) {[m
[32m+[m[32m    return ([m
[32m+[m[32m      <div className="min-h-screen bg-gradient-to-b from-[#090e1c] via-[#0d1430] to-[#111827] text-white">[m
[32m+[m[32m   